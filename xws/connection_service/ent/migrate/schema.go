// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlockedUsersColumns holds the columns for the "blocked_users" table.
	BlockedUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "issuer_primary_key", Type: field.TypeString},
		{Name: "subject_primary_key", Type: field.TypeString},
		{Name: "user_block", Type: field.TypeInt},
	}
	// BlockedUsersTable holds the schema information for the "blocked_users" table.
	BlockedUsersTable = &schema.Table{
		Name:       "blocked_users",
		Columns:    BlockedUsersColumns,
		PrimaryKey: []*schema.Column{BlockedUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "blocked_users_users_block",
				Columns:    []*schema.Column{BlockedUsersColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ConnectionsColumns holds the columns for the "connections" table.
	ConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "is_approved", Type: field.TypeBool, Default: false},
		{Name: "issuer_primary_key", Type: field.TypeString},
		{Name: "subject_primary_key", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "connection_id", Type: field.TypeInt},
	}
	// ConnectionsTable holds the schema information for the "connections" table.
	ConnectionsTable = &schema.Table{
		Name:       "connections",
		Columns:    ConnectionsColumns,
		PrimaryKey: []*schema.Column{ConnectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connections_users_user",
				Columns:    []*schema.Column{ConnectionsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_users_connection",
				Columns:    []*schema.Column{ConnectionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connection_user_id_connection_id",
				Unique:  true,
				Columns: []*schema.Column{ConnectionsColumns[5], ConnectionsColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "primary_key", Type: field.TypeString, Unique: true},
		{Name: "is_private", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlockedUsersTable,
		ConnectionsTable,
		UsersTable,
	}
)

func init() {
	BlockedUsersTable.ForeignKeys[0].RefTable = UsersTable
	ConnectionsTable.ForeignKeys[0].RefTable = UsersTable
	ConnectionsTable.ForeignKeys[1].RefTable = UsersTable
}
