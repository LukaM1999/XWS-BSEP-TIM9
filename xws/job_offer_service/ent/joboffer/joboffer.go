// Code generated by entc, DO NOT EDIT.

package joboffer

const (
	// Label holds the string label denoting the joboffer type in the database.
	Label = "job_offer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProfileID holds the string denoting the profile_id field in the database.
	FieldProfileID = "profile_id"
	// FieldCompany holds the string denoting the company field in the database.
	FieldCompany = "company"
	// FieldPosition holds the string denoting the position field in the database.
	FieldPosition = "position"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldCriteria holds the string denoting the criteria field in the database.
	FieldCriteria = "criteria"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeRequires holds the string denoting the requires edge name in mutations.
	EdgeRequires = "requires"
	// Table holds the table name of the joboffer in the database.
	Table = "job_offers"
	// RequiresTable is the table that holds the requires relation/edge. The primary key declared below.
	RequiresTable = "job_offer_requires"
	// RequiresInverseTable is the table name for the Skill entity.
	// It exists in this package in order to avoid circular dependency with the "skill" package.
	RequiresInverseTable = "skills"
)

// Columns holds all SQL columns for joboffer fields.
var Columns = []string{
	FieldID,
	FieldProfileID,
	FieldCompany,
	FieldPosition,
	FieldDescription,
	FieldCriteria,
	FieldCreatedAt,
}

var (
	// RequiresPrimaryKey and RequiresColumn2 are the table columns denoting the
	// primary key for the requires relation (M2M).
	RequiresPrimaryKey = []string{"job_offer_id", "skill_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
